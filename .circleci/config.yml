version: 2.1

setup: true

orbs:
  continuation: circleci/continuation@0.4.0

parameters:
  workflow:
    type: enum
    enum: [no-op, plain-build, generate, compile, generate-scheduled, commit-generated, generate-oasisctl, create-docs-images-amd64, create-docs-images-arm64]
    default: no-op
  
  deploy-url:
    type: string
    default: $CIRCLE_BRANCH

  generators:
    type: string
    default: ""

  version:
    type: string
    default: ""

  arangodb-branch:
    type: string
    default: ""

  arangodb-3_10:
    type: string
    default: "undefined"

  arangodb-3_11:
    type: string
    default: "undefined"

  arangodb-3_12:
    type: string
    default: "undefined"

  commit-generated:
    type: boolean
    default: false

  create-pr:
    type: boolean
    default: false

  pr-branch:
    type: string
    default: "pr"

jobs:
  generate-config:
    docker:
      - image: cimg/python:3.11.1
    executor: continuation/default
    steps:
      - run:
          name: Checkout
          command: |
            mkdir -p .circleci && cd .circleci
            curl https://api.github.com/repos/arangodb/docs-hugo/contents/.circleci?ref=$CIRCLE_SHA1 | jq ".[].download_url" | xargs wget
            wget https://raw.githubusercontent.com/arangodb/docs-hugo/$CIRCLE_BRANCH/site/data/versions.yaml

            if [ "<< pipeline.parameters.workflow >>" == "plain-build" ]; then
              cat /home/circleci/project/.circleci/base_config.yml > /home/circleci/project/.circleci/generated_config.yml

            else
              pip install pyyaml requests

              python3 generate_config.py \
                --workflow << pipeline.parameters.workflow >> \
                --arangodb-branches << pipeline.parameters.arangodb-3_10 >> << pipeline.parameters.arangodb-3_11 >> << pipeline.parameters.arangodb-3_12 >> \
                --generators << pipeline.parameters.generators >> \
                --commit-generated << pipeline.parameters.commit-generated >> \
                --create-pr << pipeline.parameters.create-pr >> \
                --pr-branch << pipeline.parameters.pr-branch >>

              echo "Generated Configuration"
              cat  /home/circleci/project/.circleci/generated_config.yml
            fi
      - store_artifacts:
          path: /home/circleci/project/.circleci/generated_config.yml
      - continuation/continue:
          configuration_path: /home/circleci/project/.circleci/generated_config.yml # use newly generated config to continue

workflows:
  setup:
    jobs:
      - create-docs-images:
          architecture: "amd64"
          executor: "medium"
  create-docs-images-arm64:
    when: { equal: [ create-docs-images-arm64, << pipeline.parameters.workflow >> ] }
    jobs:
      - create-docs-images:
          architecture: "arm64"
          executor: "arm.medium"
  plain:
    when: { equal: [ plain-build, << pipeline.parameters.workflow >> ] }
    jobs:
      - plain-build
      - deploy:
          requires:
            - plain-build

  generate:
    when: { equal: [ generate, << pipeline.parameters.workflow >> ] }
    jobs:
      - approve-workflow:
          type: approval
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.10
          arangodb-branch: << pipeline.parameters.arangodb-3_10 >>
          version: "3.10"
          openssl: "3.0.9"
          requires:
            - approve-workflow
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.11
          arangodb-branch: << pipeline.parameters.arangodb-3_11 >>
          version: "3.11"
          openssl: "3.0.9"
          requires:
            - approve-workflow
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.12
          arangodb-branch: << pipeline.parameters.arangodb-3_12 >>
          version: "3.12"
          openssl: "3.1.2"
          requires:
            - approve-workflow
      - build-with-generated:
          name: build-with-generated
          arangodb-3_10: << pipeline.parameters.arangodb-3_10 >>
          arangodb-3_11: << pipeline.parameters.arangodb-3_11 >>
          arangodb-3_12: << pipeline.parameters.arangodb-3_12 >>
          generators: << pipeline.parameters.generators >>
          commit-generated: << pipeline.parameters.commit-generated >>
          create-pr: false
          requires:
            - compile-3.10
            - compile-3.11
            - compile-3.12
      - deploy:
          requires:
            - build-with-generated
  
  generate-scheduled:
    when: { equal: [ generate-scheduled, << pipeline.parameters.workflow >> ] }
    jobs:
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.10
          arangodb-branch: "arangodb/enterprise-preview:3.10-nightly"
          version: "3.10"
          openssl: "3.0.9"
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.11
          arangodb-branch: "arangodb/enterprise-preview:3.11-nightly"
          version: "3.11"
          openssl: "3.0.9"
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.12
          arangodb-branch: "arangodb/enterprise-preview:devel-nightly"
          version: "3.12"
          openssl: "3.1.1"
      - build-with-generated:
          name: build-with-generated
          arangodb-3_10: "arangodb/enterprise-preview:3.10-nightly"
          arangodb-3_11: "arangodb/enterprise-preview:3.11-nightly"
          arangodb-3_12: "arangodb/enterprise-preview:devel-nightly"
          generators: "metrics error-codes options optimizer"
          commit-generated: true
          create-pr: true
          pr-branch: "scheduled-content-generate"
          requires:
            - compile-3.10
            - compile-3.11
            - compile-3.12

  generate-oasisctl:
    when: { equal: [ generate-oasisctl, << pipeline.parameters.workflow >> ] }
    jobs:
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.10
          arangodb-branch: "arangodb/enterprise-preview:3.10-nightly"
          version: "3.10"
          openssl: "3.0.9"
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.11
          arangodb-branch: "arangodb/enterprise-preview:3.11-nightly"
          version: "3.11"
          openssl: "3.0.9"
      - compile-linux:
          context:
            - sccache-aws-bucket
          name: compile-3.12
          arangodb-branch: "arangodb/enterprise-preview:devel-nightly"
          version: "3.12"
          openssl: "3.1.1"
      - build-with-generated:
          name: build-with-generated
          arangodb-3_10: "arangodb/enterprise-preview:3.10-nightly"
          arangodb-3_11: "arangodb/enterprise-preview:3.11-nightly"
          arangodb-3_12: "arangodb/enterprise-preview:devel-nightly"
          generators: "oasisctl"
          commit-generated: true
          create-pr: true
          pr-branch: "scheduled-oasisctl-generate"
          requires:
            - compile-3.10
            - compile-3.11
            - compile-3.12

  commmit-generated:
    when: { equal: [ commit-generated, << pipeline.parameters.workflow >> ] }
    jobs:
      - approve-workflow:
          type: approval
      - commit-generated:
          requires:
            - approve-workflow
      

  community-pr:
    when: { equal: [ compile, << pipeline.parameters.workflow >> ] }
    jobs:
      - compile-linux:
          name: "compile"
          arangodb-branch: << pipeline.parameters.arangodb-branch >>
          version: << pipeline.parameters.version >>
          context:
            - sccache-aws-bucket
